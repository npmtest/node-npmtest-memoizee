{"/home/travis/build/npmtest/node-npmtest-memoizee/test.js":"/* istanbul instrument in package npmtest_memoizee */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-memoizee/lib.npmtest_memoizee.js":"/* istanbul instrument in package npmtest_memoizee */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_memoizee = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_memoizee = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-memoizee/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-memoizee && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_memoizee */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_memoizee\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_memoizee.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_memoizee.rollup.js'] =\n            local.assetsDict['/assets.npmtest_memoizee.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_memoizee.__dirname + '/lib.npmtest_memoizee.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/index.js":"'use strict';\n\nvar normalizeOpts = require('es5-ext/object/normalize-options')\n  , resolveLength = require('./lib/resolve-length')\n  , plain         = require('./plain');\n\nmodule.exports = function (fn/*, options*/) {\n\tvar options = normalizeOpts(arguments[1]), length;\n\n\tif (!options.normalizer) {\n\t\tlength = options.length = resolveLength(options.length, fn.length, options.async);\n\t\tif (length !== 0) {\n\t\t\tif (options.primitive) {\n\t\t\t\tif (length === false) {\n\t\t\t\t\toptions.normalizer = require('./normalizers/primitive');\n\t\t\t\t} else if (length > 1) {\n\t\t\t\t\toptions.normalizer = require('./normalizers/get-primitive-fixed')(length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (length === false) options.normalizer = require('./normalizers/get')();\n\t\t\t\telse if (length === 1) options.normalizer = require('./normalizers/get-1')();\n\t\t\t\telse options.normalizer = require('./normalizers/get-fixed')(length);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Assure extensions\n\tif (options.async) require('./ext/async');\n\tif (options.promise) require('./ext/promise');\n\tif (options.dispose) require('./ext/dispose');\n\tif (options.maxAge) require('./ext/max-age');\n\tif (options.max) require('./ext/max');\n\tif (options.refCounter) require('./ext/ref-counter');\n\n\treturn plain(fn, options);\n};\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/lib/resolve-length.js":"'use strict';\n\nvar toPosInt = require('es5-ext/number/to-pos-integer');\n\nmodule.exports = function (optsLength, fnLength, isAsync) {\n\tvar length;\n\tif (isNaN(optsLength)) {\n\t\tlength = fnLength;\n\t\tif (!(length >= 0)) return 1;\n\t\tif (isAsync && length) return length - 1;\n\t\treturn length;\n\t}\n\tif (optsLength === false) return false;\n\treturn toPosInt(optsLength);\n};\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/plain.js":"'use strict';\n\nvar callable      = require('es5-ext/object/valid-callable')\n  , forEach       = require('es5-ext/object/for-each')\n  , extensions    = require('./lib/registered-extensions')\n  , configure     = require('./lib/configure-map')\n  , resolveLength = require('./lib/resolve-length')\n\n  , hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function self(fn/*, options */) {\n\tvar options, length, conf;\n\n\tcallable(fn);\n\toptions = Object(arguments[1]);\n\n\tif (options.async && options.promise) {\n\t\tthrow new Error(\"Options 'async' and 'promise' cannot be used together\");\n\t}\n\n\t// Do not memoize already memoized function\n\tif (hasOwnProperty.call(fn, '__memoized__') && !options.force) return fn;\n\n\t// Resolve length;\n\tlength = resolveLength(options.length, fn.length, options.async && extensions.async);\n\n\t// Configure cache map\n\tconf = configure(fn, length, options);\n\n\t// Bind eventual extensions\n\tforEach(extensions, function (fn, name) {\n\t\tif (options[name]) fn(options[name], conf, options);\n\t});\n\n\tif (self.__profiler__) self.__profiler__(conf);\n\n\tconf.updateEnv();\n\treturn conf.memoized;\n};\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/lib/registered-extensions.js":"'use strict';\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/lib/configure-map.js":"'use strict';\n\nvar customError      = require('es5-ext/error/custom')\n  , defineLength     = require('es5-ext/function/_define-length')\n  , d                = require('d')\n  , ee               = require('event-emitter').methods\n  , resolveResolve   = require('./resolve-resolve')\n  , resolveNormalize = require('./resolve-normalize')\n\n  , apply = Function.prototype.apply, call = Function.prototype.call\n  , create = Object.create, hasOwnProperty = Object.prototype.hasOwnProperty\n  , defineProperties = Object.defineProperties\n  , on = ee.on, emit = ee.emit;\n\nmodule.exports = function (original, length, options) {\n\tvar cache = create(null), conf, memLength, get, set, del, clear, extDel,\n\t\textGet, extHas, normalizer, getListeners, setListeners, deleteListeners, memoized, resolve;\n\tif (length !== false) memLength = length;\n\telse if (isNaN(original.length)) memLength = 1;\n\telse memLength = original.length;\n\n\tif (options.normalizer) {\n\t\tnormalizer = resolveNormalize(options.normalizer);\n\t\tget = normalizer.get;\n\t\tset = normalizer.set;\n\t\tdel = normalizer.delete;\n\t\tclear = normalizer.clear;\n\t}\n\tif (options.resolvers != null) resolve = resolveResolve(options.resolvers);\n\n\tif (get) {\n\t\tmemoized = defineLength(function (arg) {\n\t\t\tvar id, result, args = arguments;\n\t\t\tif (resolve) args = resolve(args);\n\t\t\tid = get(args);\n\t\t\tif (id !== null) {\n\t\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\t\tif (getListeners) conf.emit('get', id, args, this);\n\t\t\t\t\treturn cache[id];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (args.length === 1) result = call.call(original, this, args[0]);\n\t\t\telse result = apply.call(original, this, args);\n\t\t\tif (id === null) {\n\t\t\t\tid = get(args);\n\t\t\t\tif (id !== null) throw customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t\tid = set(args);\n\t\t\t} else if (hasOwnProperty.call(cache, id)) {\n\t\t\t\tthrow customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t}\n\t\t\tcache[id] = result;\n\t\t\tif (setListeners) conf.emit('set', id, null, result);\n\t\t\treturn result;\n\t\t}, memLength);\n\t} else if (length === 0) {\n\t\tmemoized = function () {\n\t\t\tvar result;\n\t\t\tif (hasOwnProperty.call(cache, 'data')) {\n\t\t\t\tif (getListeners) conf.emit('get', 'data', arguments, this);\n\t\t\t\treturn cache.data;\n\t\t\t}\n\t\t\tif (!arguments.length) result = call.call(original, this);\n\t\t\telse result = apply.call(original, this, arguments);\n\t\t\tif (hasOwnProperty.call(cache, 'data')) {\n\t\t\t\tthrow customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t}\n\t\t\tcache.data = result;\n\t\t\tif (setListeners) conf.emit('set', 'data', null, result);\n\t\t\treturn result;\n\t\t};\n\t} else {\n\t\tmemoized = function (arg) {\n\t\t\tvar result, args = arguments, id;\n\t\t\tif (resolve) args = resolve(arguments);\n\t\t\tid = String(args[0]);\n\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\tif (getListeners) conf.emit('get', id, args, this);\n\t\t\t\treturn cache[id];\n\t\t\t}\n\t\t\tif (args.length === 1) result = call.call(original, this, args[0]);\n\t\t\telse result = apply.call(original, this, args);\n\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\tthrow customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t}\n\t\t\tcache[id] = result;\n\t\t\tif (setListeners) conf.emit('set', id, null, result);\n\t\t\treturn result;\n\t\t};\n\t}\n\tconf = {\n\t\toriginal: original,\n\t\tmemoized: memoized,\n\t\tget: function (args) {\n\t\t\tif (resolve) args = resolve(args);\n\t\t\tif (get) return get(args);\n\t\t\treturn String(args[0]);\n\t\t},\n\t\thas: function (id) { return hasOwnProperty.call(cache, id); },\n\t\tdelete: function (id) {\n\t\t\tvar result;\n\t\t\tif (!hasOwnProperty.call(cache, id)) return;\n\t\t\tif (del) del(id);\n\t\t\tresult = cache[id];\n\t\t\tdelete cache[id];\n\t\t\tif (deleteListeners) conf.emit('delete', id, result);\n\t\t},\n\t\tclear: function () {\n\t\t\tvar oldCache = cache;\n\t\t\tif (clear) clear();\n\t\t\tcache = create(null);\n\t\t\tconf.emit('clear', oldCache);\n\t\t},\n\t\ton: function (type, listener) {\n\t\t\tif (type === 'get') getListeners = true;\n\t\t\telse if (type === 'set') setListeners = true;\n\t\t\telse if (type === 'delete') deleteListeners = true;\n\t\t\treturn on.call(this, type, listener);\n\t\t},\n\t\temit: emit,\n\t\tupdateEnv: function () { original = conf.original; }\n\t};\n\tif (get) {\n\t\textDel = defineLength(function (arg) {\n\t\t\tvar id, args = arguments;\n\t\t\tif (resolve) args = resolve(args);\n\t\t\tid = get(args);\n\t\t\tif (id === null) return;\n\t\t\tconf.delete(id);\n\t\t}, memLength);\n\t} else if (length === 0) {\n\t\textDel = function () { return conf.delete('data'); };\n\t} else {\n\t\textDel = function (arg) {\n\t\t\tif (resolve) arg = resolve(arguments)[0];\n\t\t\treturn conf.delete(arg);\n\t\t};\n\t}\n\textGet = defineLength(function () {\n\t\tvar id, args = arguments;\n\t\tif (resolve) args = resolve(args);\n\t\tid = get(args);\n\t\treturn cache[id];\n\t});\n\textHas = defineLength(function () {\n\t\tvar id, args = arguments;\n\t\tif (resolve) args = resolve(args);\n\t\tid = get(args);\n\t\tif (id === null) return false;\n\t\treturn conf.has(id);\n\t});\n\tdefineProperties(memoized, {\n\t\t__memoized__: d(true),\n\t\tdelete: d(extDel),\n\t\tclear: d(conf.clear),\n\t\t_get: d(extGet),\n\t\t_has: d(extHas)\n\t});\n\treturn conf;\n};\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/lib/resolve-resolve.js":"'use strict';\n\nvar toArray  = require('es5-ext/array/to-array')\n  , callable = require('es5-ext/object/valid-callable')\n\n  , slice = Array.prototype.slice\n  , resolveArgs;\n\nresolveArgs = function (args) {\n\treturn this.map(function (r, i) {\n\t\treturn r ? r(args[i]) : args[i];\n\t}).concat(slice.call(args, this.length));\n};\n\nmodule.exports = function (resolvers) {\n\tresolvers = toArray(resolvers);\n\tresolvers.forEach(function (r) {\n\t\tif (r != null) callable(r);\n\t});\n\treturn resolveArgs.bind(resolvers);\n};\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/lib/resolve-normalize.js":"'use strict';\n\nvar callable = require('es5-ext/object/valid-callable');\n\nmodule.exports = function (userNormalizer) {\n\tvar normalizer;\n\tif (typeof userNormalizer === 'function') return { set: userNormalizer, get: userNormalizer };\n\tnormalizer = { get: callable(userNormalizer.get) };\n\tif (userNormalizer.set !== undefined) {\n\t\tnormalizer.set = callable(userNormalizer.set);\n\t\tif (userNormalizer.delete) normalizer.delete = callable(userNormalizer.delete);\n\t\tif (userNormalizer.clear) normalizer.clear = callable(userNormalizer.clear);\n\t\treturn normalizer;\n\t}\n\tnormalizer.set = normalizer.get;\n\treturn normalizer;\n};\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/methods.js":"'use strict';\n\nmodule.exports = require('./lib/methods')(require('./'));\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/lib/methods.js":"'use strict';\n\nvar forEach       = require('es5-ext/object/for-each')\n  , normalizeOpts = require('es5-ext/object/normalize-options')\n  , callable      = require('es5-ext/object/valid-callable')\n  , lazy          = require('d/lazy')\n  , resolveLength = require('./resolve-length')\n  , extensions    = require('./registered-extensions');\n\nmodule.exports = function (memoize) {\n\treturn function (props) {\n\t\tforEach(props, function (desc, name) {\n\t\t\tvar fn = callable(desc.value), length;\n\t\t\tdesc.value = function (options) {\n\t\t\t\tif (options.getNormalizer) {\n\t\t\t\t\toptions = normalizeOpts(options);\n\t\t\t\t\tif (length === undefined) {\n\t\t\t\t\t\tlength = resolveLength(options.length, fn.length, options.async && extensions.async);\n\t\t\t\t\t}\n\t\t\t\t\toptions.normalizer = options.getNormalizer(length);\n\t\t\t\t\tdelete options.getNormalizer;\n\t\t\t\t}\n\t\t\t\treturn memoize(fn.bind(this), options);\n\t\t\t};\n\t\t});\n\t\treturn lazy(props);\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/methods-plain.js":"'use strict';\n\nmodule.exports = require('./lib/methods')(require('./plain'));\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/profile.js":"// Gathers statistical data, and provides them in convinient form\n\n'use strict';\n\nvar partial  = require('es5-ext/function/#/partial')\n  , forEach  = require('es5-ext/object/for-each')\n  , pad      = require('es5-ext/string/#/pad')\n  , d        = require('d')\n  , memoize  = require('./plain')\n\n  , max = Math.max\n  , stats = exports.statistics = {};\n\nObject.defineProperty(memoize, '__profiler__', d(function (conf) {\n\tvar id, stack, data;\n\tstack = (new Error()).stack;\n\tif (!stack || !stack.split('\\n').slice(3).some(function (line) {\n\t\t\tif ((line.indexOf('/memoizee/') === -1) &&\n\t\t\t\t\t(line.indexOf(' (native)') === -1)) {\n\t\t\t\tid  = line.replace(/\\n/g, \"\\\\n\").trim();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t})) {\n\t\tid = 'unknown';\n\t}\n\n\tif (!stats[id]) stats[id] = { initial: 0, cached: 0 };\n\tdata = stats[id];\n\n\tconf.on('set', function () { ++data.initial; });\n\tconf.on('get', function () { ++data.cached; });\n}));\n\nexports.log = function () {\n\tvar initial, cached, ordered, ipad, cpad, ppad, toPrc, log;\n\n\tinitial = cached = 0;\n\tordered = [];\n\n\ttoPrc = function (initial, cached) {\n\t\tif (!initial && !cached) {\n\t\t\treturn '0.00';\n\t\t}\n\t\treturn ((cached / (initial + cached)) * 100).toFixed(2);\n\t};\n\n\tlog = \"------------------------------------------------------------\\n\";\n\tlog += \"Memoize statistics:\\n\\n\";\n\n\tforEach(stats, function (data, name) {\n\t\tinitial += data.initial;\n\t\tcached += data.cached;\n\t\tordered.push([name, data]);\n\t}, null, function (a, b) {\n\t\treturn (this[b].initial + this[b].cached) -\n\t\t\t(this[a].initial + this[a].cached);\n\t});\n\n\tipad = partial.call(pad, \" \",\n\t\tmax(String(initial).length, \"Init\".length));\n\tcpad = partial.call(pad, \" \", max(String(cached).length, \"Cache\".length));\n\tppad = partial.call(pad, \" \", \"%Cache\".length);\n\tlog += ipad.call(\"Init\") + \"  \" +\n\t\tcpad.call(\"Cache\") + \"  \" +\n\t\tppad.call(\"%Cache\") + \"  Source location\\n\";\n\tlog += ipad.call(initial) + \"  \" +\n\t\tcpad.call(cached) + \"  \" +\n\t\tppad.call(toPrc(initial, cached)) + \"  (all)\\n\";\n\tordered.forEach(function (data) {\n\t\tvar name = data[0];\n\t\tdata = data[1];\n\t\tlog += ipad.call(data.initial) + \"  \" +\n\t\t\tcpad.call(data.cached) + \"  \" +\n\t\t\tppad.call(toPrc(data.initial, data.cached)) + \"  \" + name + \"\\n\";\n\t});\n\tlog += \"------------------------------------------------------------\\n\";\n\treturn log;\n};\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/weak.js":"'use strict';\n\nmodule.exports = require('./lib/weak')(require('./'));\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/lib/weak.js":"'use strict';\n\nvar customError      = require('es5-ext/error/custom')\n  , defineLength     = require('es5-ext/function/_define-length')\n  , partial          = require('es5-ext/function/#/partial')\n  , copy             = require('es5-ext/object/copy')\n  , normalizeOpts    = require('es5-ext/object/normalize-options')\n  , callable         = require('es5-ext/object/valid-callable')\n  , d                = require('d')\n  , WeakMap          = require('es6-weak-map')\n  , resolveLength    = require('./resolve-length')\n  , extensions       = require('./registered-extensions')\n  , resolveResolve   = require('./resolve-resolve')\n  , resolveNormalize = require('./resolve-normalize')\n\n  , slice = Array.prototype.slice, defineProperties = Object.defineProperties\n  , hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function (memoize) {\n\treturn function (fn/*, options*/) {\n\t\tvar map, length, options = normalizeOpts(arguments[1]), memoized, resolve, normalizer;\n\n\t\tcallable(fn);\n\n\t\t// Do not memoize already memoized function\n\t\tif (hasOwnProperty.call(fn, '__memoized__') && !options.force) return fn;\n\n\t\tlength = resolveLength(options.length, fn.length, options.async && extensions.async);\n\t\toptions.length = length ? length - 1 : 0;\n\t\tmap = new WeakMap();\n\n\t\tif (options.resolvers) resolve = resolveResolve(options.resolvers);\n\t\tif (options.normalizer) normalizer = resolveNormalize(options.normalizer);\n\n\t\tif ((length === 1) && !normalizer && !(options.async && extensions.async) &&\n\t\t\t\t!(options.dispose && extensions.dispose) && !(options.maxAge && extensions.maxAge) &&\n\t\t\t\t!(options.max && extensions.max) && !(options.refCounter && extensions.refCounter)) {\n\t\t\treturn defineProperties(function (obj) {\n\t\t\t\tvar result, args = arguments;\n\t\t\t\tif (resolve) args = resolve(args);\n\t\t\t\tobj = args[0];\n\t\t\t\tif (map.has(obj)) return map.get(obj);\n\t\t\t\tresult = fn.apply(this, args);\n\t\t\t\tif (map.has(obj)) throw customError(\"Circular invocation\", 'CIRCULAR_INVOCATION');\n\t\t\t\tmap.set(obj, result);\n\t\t\t\treturn result;\n\t\t\t}, {\n\t\t\t\t__memoized__: d(true),\n\t\t\t\tdelete: d(function (obj) {\n\t\t\t\t\tif (resolve) obj = resolve(arguments)[0];\n\t\t\t\t\treturn map.delete(obj);\n\t\t\t\t})\n\t\t\t});\n\t\t}\n\t\tmemoized = defineProperties(defineLength(function (obj) {\n\t\t\tvar memoizer, args = arguments;\n\t\t\tif (resolve) {\n\t\t\t\targs = resolve(args);\n\t\t\t\tobj = args[0];\n\t\t\t}\n\t\t\tmemoizer = map.get(obj);\n\t\t\tif (!memoizer) {\n\t\t\t\tif (normalizer) {\n\t\t\t\t\toptions = copy(options);\n\t\t\t\t\toptions.normalizer = copy(normalizer);\n\t\t\t\t\toptions.normalizer.get = partial.call(options.normalizer.get, obj);\n\t\t\t\t\toptions.normalizer.set = partial.call(options.normalizer.set, obj);\n\t\t\t\t\tif (options.normalizer.delete) {\n\t\t\t\t\t\toptions.normalizer.delete = partial.call(options.normalizer.delete, obj);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmap.set(obj, memoizer = memoize(partial.call(fn, obj), options));\n\t\t\t}\n\t\t\treturn memoizer.apply(this, slice.call(args, 1));\n\t\t}, length), {\n\t\t\t__memoized__: d(true),\n\t\t\tdelete: d(defineLength(function (obj) {\n\t\t\t\tvar memoizer, args = arguments;\n\t\t\t\tif (resolve) {\n\t\t\t\t\targs = resolve(args);\n\t\t\t\t\tobj = args[0];\n\t\t\t\t}\n\t\t\t\tmemoizer = map.get(obj);\n\t\t\t\tif (!memoizer) return;\n\t\t\t\tmemoizer.delete.apply(this, slice.call(args, 1));\n\t\t\t}, length))\n\t\t});\n\t\tif (!options.refCounter || !extensions.refCounter) return memoized;\n\t\tdefineProperties(memoized, {\n\t\t\tdeleteRef: d(defineLength(function (obj) {\n\t\t\t\tvar memoizer, args = arguments;\n\t\t\t\tif (resolve) {\n\t\t\t\t\targs = resolve(args);\n\t\t\t\t\tobj = args[0];\n\t\t\t\t}\n\t\t\t\tmemoizer = map.get(obj);\n\t\t\t\tif (!memoizer) return null;\n\t\t\t\treturn memoizer.deleteRef.apply(this, slice.call(args, 1));\n\t\t\t}, length)),\n\t\t\tgetRefCount: d(defineLength(function (obj) {\n\t\t\t\tvar memoizer, args = arguments;\n\t\t\t\tif (resolve) {\n\t\t\t\t\targs = resolve(args);\n\t\t\t\t\tobj = args[0];\n\t\t\t\t}\n\t\t\t\tmemoizer = map.get(obj);\n\t\t\t\tif (!memoizer) return 0;\n\t\t\t\treturn memoizer.getRefCount.apply(this, slice.call(args, 1));\n\t\t\t}, length))\n\t\t});\n\t\treturn memoized;\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/weak-plain.js":"'use strict';\n\nmodule.exports = require('./lib/weak')(require('./plain'));\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/benchmark/fibonacci.js":"'use strict';\n\n// Simple benchmark for very simple memoization case (fibonacci series)\n// To run it, do following in memoizee package path:\n//\n// $ npm install underscore lodash lru-cache secondary-cache\n// $ node benchmark/fibonacci.js\n\nvar forEach      = require('es5-ext/object/for-each')\n  , pad          = require('es5-ext/string/#/pad')\n  , memoizee     = require('..')\n  , underscore   = require('underscore').memoize\n  , lodash       = require('lodash').memoize\n  , lruCache     = require('lru-cache')\n  , lruSecondary = require('secondary-cache/lib/lru-cache')\n\n  , now = Date.now\n\n  , time, getFib, lru, memo, total, index = 3000, count = 10, i, lruMax = 1000\n  , data = {}, lruObj;\n\ngetFib = function (memoize, opts) {\n\tvar fib = memoize(function (x) {\n\t\treturn (x < 2) ? 1 : fib(x - 1) + fib(x - 2);\n\t}, opts);\n\treturn fib;\n};\n\nlru = function (x) {\n\tvar value = lruObj.get(x);\n\tif (value === undefined) {\n\t\tvalue = ((x < 2) ? 1 : lru(x - 1) + lru(x - 2));\n\t\tlruObj.set(x, value);\n\t}\n\treturn value;\n};\n\nconsole.log(\"Fibonacci\", index, \"x\" + count + \":\\n\");\n\ntotal = 0;\ni = count;\nwhile (i--) {\n\tmemo = getFib(memoizee);\n\ttime = now();\n\tmemo(index);\n\ttotal += now() - time;\n}\ndata[\"Memoizee (object mode)\"] = total;\n\ntotal = 0;\ni = count;\nwhile (i--) {\n\tmemo = getFib(memoizee, { primitive: true });\n\ttime = now();\n\tmemo(index);\n\ttotal += now() - time;\n}\ndata[\"Memoizee (primitive mode)\"] = total;\n\ntotal = 0;\ni = count;\nwhile (i--) {\n\tmemo = getFib(underscore);\n\ttime = now();\n\tmemo(index);\n\ttotal += now() - time;\n}\ndata[\"Underscore\"] = total;\n\ntotal = 0;\ni = count;\nwhile (i--) {\n\tmemo = getFib(lodash);\n\ttime = now();\n\tmemo(index);\n\ttotal += now() - time;\n}\ndata[\"Lo-dash\"] = total;\n\ntotal = 0;\ni = count;\nwhile (i--) {\n\tmemo = getFib(memoizee, { primitive: true, max: lruMax });\n\ttime = now();\n\tmemo(index);\n\ttotal += now() - time;\n}\ndata[\"Memoizee (primitive mode) LRU (max: 1000)\"] = total;\n\ntotal = 0;\ni = count;\nwhile (i--) {\n\tmemo = getFib(memoizee, { max: lruMax });\n\ttime = now();\n\tmemo(index);\n\ttotal += now() - time;\n}\ndata[\"Memoizee (object mode)    LRU (max: 1000)\"] = total;\n\ntotal = 0;\ni = count;\nwhile (i--) {\n\tlruObj = lruCache({ max: lruMax });\n\ttime = now();\n\tlru(index);\n\ttotal += now() - time;\n}\ndata[\"lru-cache                 LRU (max: 1000)\"] = total;\n\ntotal = 0;\ni = count;\nwhile (i--) {\n\tlruObj = lruSecondary(lruMax);\n\ttime = now();\n\tlru(index);\n\ttotal += now() - time;\n}\ndata[\"secondary-cache           LRU (max: 1000)\"] = total;\n\nforEach(data, function (value, name, obj, index) {\n\tconsole.log(index + 1 + \":\",  pad.call(value, \" \", 5) + \"ms \", name);\n}, null, function (a, b) {\n\treturn this[a] - this[b];\n});\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/ext/async.js":"// Support for asynchronous functions\n\n'use strict';\n\nvar aFrom        = require('es5-ext/array/from')\n  , objectMap    = require('es5-ext/object/map')\n  , mixin        = require('es5-ext/object/mixin')\n  , defineLength = require('es5-ext/function/_define-length')\n  , nextTick     = require('next-tick')\n\n  , slice = Array.prototype.slice\n  , apply = Function.prototype.apply, create = Object.create\n  , hasOwnProperty = Object.prototype.hasOwnProperty;\n\nrequire('../lib/registered-extensions').async = function (tbi, conf) {\n\tvar waiting = create(null), cache = create(null)\n\t  , base = conf.memoized, original = conf.original\n\t  , currentCallback, currentContext, currentArgs;\n\n\t// Initial\n\tconf.memoized = defineLength(function (arg) {\n\t\tvar args = arguments, last = args[args.length - 1];\n\t\tif (typeof last === 'function') {\n\t\t\tcurrentCallback = last;\n\t\t\targs = slice.call(args, 0, -1);\n\t\t}\n\t\treturn base.apply(currentContext = this, currentArgs = args);\n\t}, base);\n\ttry { mixin(conf.memoized, base); } catch (ignore) {}\n\n\t// From cache (sync)\n\tconf.on('get', function (id) {\n\t\tvar cb, context, args;\n\t\tif (!currentCallback) return;\n\n\t\t// Unresolved\n\t\tif (waiting[id]) {\n\t\t\tif (typeof waiting[id] === 'function') waiting[id] = [waiting[id], currentCallback];\n\t\t\telse waiting[id].push(currentCallback);\n\t\t\tcurrentCallback = null;\n\t\t\treturn;\n\t\t}\n\n\t\t// Resolved, assure next tick invocation\n\t\tcb = currentCallback;\n\t\tcontext = currentContext;\n\t\targs = currentArgs;\n\t\tcurrentCallback = currentContext = currentArgs = null;\n\t\tnextTick(function () {\n\t\t\tvar data;\n\t\t\tif (hasOwnProperty.call(cache, id)) {\n\t\t\t\tdata = cache[id];\n\t\t\t\tconf.emit('getasync', id, args, context);\n\t\t\t\tapply.call(cb, data.context, data.args);\n\t\t\t} else {\n\t\t\t\t// Purged in a meantime, we shouldn't rely on cached value, recall\n\t\t\t\tcurrentCallback = cb;\n\t\t\t\tcurrentContext = context;\n\t\t\t\tcurrentArgs = args;\n\t\t\t\tbase.apply(context, args);\n\t\t\t}\n\t\t});\n\t});\n\n\t// Not from cache\n\tconf.original = function () {\n\t\tvar args, cb, origCb, result;\n\t\tif (!currentCallback) return apply.call(original, this, arguments);\n\t\targs = aFrom(arguments);\n\t\tcb = function self(err) {\n\t\t\tvar cb, args, id = self.id;\n\t\t\tif (id == null) {\n\t\t\t\t// Shouldn't happen, means async callback was called sync way\n\t\t\t\tnextTick(apply.bind(self, this, arguments));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdelete self.id;\n\t\t\tcb = waiting[id];\n\t\t\tdelete waiting[id];\n\t\t\tif (!cb) {\n\t\t\t\t// Already processed,\n\t\t\t\t// outcome of race condition: asyncFn(1, cb), asyncFn.clear(), asyncFn(1, cb)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\targs = aFrom(arguments);\n\t\t\tif (conf.has(id)) {\n\t\t\t\tif (err) {\n\t\t\t\t\tconf.delete(id);\n\t\t\t\t} else {\n\t\t\t\t\tcache[id] = { context: this, args: args };\n\t\t\t\t\tconf.emit('setasync', id, (typeof cb === 'function') ? 1 : cb.length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof cb === 'function') {\n\t\t\t\tresult = apply.call(cb, this, args);\n\t\t\t} else {\n\t\t\t\tcb.forEach(function (cb) { result = apply.call(cb, this, args); }, this);\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t\torigCb = currentCallback;\n\t\tcurrentCallback = currentContext = currentArgs = null;\n\t\targs.push(cb);\n\t\tresult = apply.call(original, this, args);\n\t\tcb.cb = origCb;\n\t\tcurrentCallback = cb;\n\t\treturn result;\n\t};\n\n\t// After not from cache call\n\tconf.on('set', function (id) {\n\t\tif (!currentCallback) {\n\t\t\tconf.delete(id);\n\t\t\treturn;\n\t\t}\n\t\tif (waiting[id]) {\n\t\t\t// Race condition: asyncFn(1, cb), asyncFn.clear(), asyncFn(1, cb)\n\t\t\tif (typeof waiting[id] === 'function') waiting[id] = [waiting[id], currentCallback.cb];\n\t\t\telse waiting[id].push(currentCallback.cb);\n\t\t} else {\n\t\t\twaiting[id] = currentCallback.cb;\n\t\t}\n\t\tdelete currentCallback.cb;\n\t\tcurrentCallback.id = id;\n\t\tcurrentCallback = null;\n\t});\n\n\t// On delete\n\tconf.on('delete', function (id) {\n\t\tvar result;\n\t\t// If false, we don't have value yet, so we assume that intention is not\n\t\t// to memoize this call. After value is obtained we don't cache it but\n\t\t// gracefully pass to callback\n\t\tif (hasOwnProperty.call(waiting, id)) return;\n\t\tif (!cache[id]) return;\n\t\tresult = cache[id];\n\t\tdelete cache[id];\n\t\tconf.emit('deleteasync', id, slice.call(result.args, 1));\n\t});\n\n\t// On clear\n\tconf.on('clear', function () {\n\t\tvar oldCache = cache;\n\t\tcache = create(null);\n\t\tconf.emit('clearasync', objectMap(oldCache, function (data) {\n\t\t\treturn slice.call(data.args, 1);\n\t\t}));\n\t});\n};\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/ext/dispose.js":"// Call dispose callback on each cache purge\n\n'use strict';\n\nvar callable   = require('es5-ext/object/valid-callable')\n  , forEach    = require('es5-ext/object/for-each')\n  , extensions = require('../lib/registered-extensions')\n\n  , apply = Function.prototype.apply;\n\nextensions.dispose = function (dispose, conf, options) {\n\tvar del;\n\tcallable(dispose);\n\tif ((options.async && extensions.async) || (options.promise && extensions.promise)) {\n\t\tconf.on('deleteasync', del = function (id, resultArray) {\n\t\t\tapply.call(dispose, null, resultArray);\n\t\t});\n\t\tconf.on('clearasync', function (cache) {\n\t\t\tforEach(cache, function (result, id) { del(id, result); });\n\t\t});\n\t\treturn;\n\t}\n\tconf.on('delete', del = function (id, result) { dispose(result); });\n\tconf.on('clear', function (cache) {\n\t\tforEach(cache, function (result, id) { del(id, result); });\n\t});\n};\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/ext/max-age.js":"// Timeout cached values\n\n'use strict';\n\nvar aFrom      = require('es5-ext/array/from')\n  , forEach    = require('es5-ext/object/for-each')\n  , nextTick   = require('next-tick')\n  , isPromise  = require('is-promise')\n  , timeout    = require('timers-ext/valid-timeout')\n  , extensions = require('../lib/registered-extensions')\n\n  , noop = Function.prototype\n  , max = Math.max, min = Math.min, create = Object.create;\n\nextensions.maxAge = function (maxAge, conf, options) {\n\tvar timeouts, postfix, preFetchAge, preFetchTimeouts;\n\n\tmaxAge = timeout(maxAge);\n\tif (!maxAge) return;\n\n\ttimeouts = create(null);\n\tpostfix = ((options.async && extensions.async) || (options.promise && extensions.promise))\n\t\t? 'async' : '';\n\tconf.on('set' + postfix, function (id) {\n\t\ttimeouts[id] = setTimeout(function () { conf.delete(id); }, maxAge);\n\t\tif (!preFetchTimeouts) return;\n\t\tif (preFetchTimeouts[id]) {\n\t\t\tif (preFetchTimeouts[id] !== 'nextTick') clearTimeout(preFetchTimeouts[id]);\n\t\t}\n\t\tpreFetchTimeouts[id] = setTimeout(function () {\n\t\t\tdelete preFetchTimeouts[id];\n\t\t}, preFetchAge);\n\t});\n\tconf.on('delete' + postfix, function (id) {\n\t\tclearTimeout(timeouts[id]);\n\t\tdelete timeouts[id];\n\t\tif (!preFetchTimeouts) return;\n\t\tif (preFetchTimeouts[id] !== 'nextTick') clearTimeout(preFetchTimeouts[id]);\n\t\tdelete preFetchTimeouts[id];\n\t});\n\n\tif (options.preFetch) {\n\t\tif ((options.preFetch === true) || isNaN(options.preFetch)) {\n\t\t\tpreFetchAge = 0.333;\n\t\t} else {\n\t\t\tpreFetchAge = max(min(Number(options.preFetch), 1), 0);\n\t\t}\n\t\tif (preFetchAge) {\n\t\t\tpreFetchTimeouts = {};\n\t\t\tpreFetchAge = (1 - preFetchAge) * maxAge;\n\t\t\tconf.on('get' + postfix, function (id, args, context) {\n\t\t\t\tif (!preFetchTimeouts[id]) {\n\t\t\t\t\tpreFetchTimeouts[id] = 'nextTick';\n\t\t\t\t\tnextTick(function () {\n\t\t\t\t\t\tvar result;\n\t\t\t\t\t\tif (preFetchTimeouts[id] !== 'nextTick') return;\n\t\t\t\t\t\tdelete preFetchTimeouts[id];\n\t\t\t\t\t\tconf.delete(id);\n\t\t\t\t\t\tif (options.async) {\n\t\t\t\t\t\t\targs = aFrom(args);\n\t\t\t\t\t\t\targs.push(noop);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult = conf.memoized.apply(context, args);\n\t\t\t\t\t\tif (options.promise) {\n\t\t\t\t\t\t\t// Supress eventual error warnings\n\t\t\t\t\t\t\tif (isPromise(result)) {\n\t\t\t\t\t\t\t\tif (typeof result.done === 'function') result.done(noop, noop);\n\t\t\t\t\t\t\t\telse result.then(noop, noop);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tconf.on('clear' + postfix, function () {\n\t\tforEach(timeouts, function (id) { clearTimeout(id); });\n\t\ttimeouts = {};\n\t\tif (preFetchTimeouts) {\n\t\t\tforEach(preFetchTimeouts, function (id) {\n\t\t\t\tif (id !== 'nextTick') clearTimeout(id);\n\t\t\t});\n\t\t\tpreFetchTimeouts = {};\n\t\t}\n\t});\n};\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/ext/max.js":"// Limit cache size, LRU (least recently used) algorithm.\n\n'use strict';\n\nvar toPosInteger = require('es5-ext/number/to-pos-integer')\n  , lruQueue     = require('lru-queue')\n  , extensions   = require('../lib/registered-extensions');\n\nextensions.max = function (max, conf, options) {\n\tvar postfix, queue, hit;\n\n\tmax = toPosInteger(max);\n\tif (!max) return;\n\n\tqueue = lruQueue(max);\n\tpostfix = ((options.async && extensions.async) || (options.promise && extensions.promise))\n\t\t? 'async' : '';\n\n\tconf.on('set' + postfix, hit = function (id) {\n\t\tid = queue.hit(id);\n\t\tif (id === undefined) return;\n\t\tconf.delete(id);\n\t});\n\tconf.on('get' + postfix, hit);\n\tconf.on('delete' + postfix, queue.delete);\n\tconf.on('clear' + postfix, queue.clear);\n};\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/ext/promise.js":"// Support for functions returning promise\n\n'use strict';\n\nvar objectMap = require('es5-ext/object/map')\n  , isPromise = require('is-promise')\n  , nextTick  = require('next-tick')\n\n  , create = Object.create, hasOwnProperty = Object.prototype.hasOwnProperty;\n\nrequire('../lib/registered-extensions').promise = function (mode, conf) {\n\tvar waiting = create(null), cache = create(null), promises = create(null);\n\n\t// After not from cache call\n\tconf.on('set', function (id, ignore, promise) {\n\t\tvar isFailed = false;\n\n\t\tif (!isPromise(promise)) {\n\t\t\t// Non promise result\n\t\t\tcache[id] = promise;\n\t\t\tconf.emit('setasync', id, 1);\n\t\t\treturn;\n\t\t}\n\t\twaiting[id] = 1;\n\t\tpromises[id] = promise;\n\t\tvar onSuccess = function (result) {\n\t\t\tvar count = waiting[id];\n\t\t\tif (isFailed) {\n\t\t\t\tthrow new Error(\"Memoizee error: Promise resolved with both failure and success,\" +\n\t\t\t\t\t\" this can be result of unordered done & finally resolution.\\n\" +\n\t\t\t\t\t\"Instead of `promise: true` consider configuring memoization via `promise: 'then'` or \" +\n\t\t\t\t\t\"`promise: 'done'\");\n\t\t\t}\n\t\t\tif (!count) return; // deleted from cache before resolved\n\t\t\tdelete waiting[id];\n\t\t\tcache[id] = result;\n\t\t\tconf.emit('setasync', id, count);\n\t\t};\n\t\tvar onFailure = function () {\n\t\t\tisFailed = true;\n\t\t\tif (!waiting[id]) return; // deleted from cache (or succeed in case of finally)\n\t\t\tdelete waiting[id];\n\t\t\tdelete promises[id];\n\t\t\tconf.delete(id);\n\t\t};\n\n\t\tif ((mode !== 'then') && (typeof promise.done === 'function')) {\n\t\t\t// Optimal promise resolution\n\t\t\tif ((mode !== 'done') && (typeof promise.finally === 'function')) {\n\t\t\t\t// Use 'finally' to not register error handling (still proper behavior is subject to\n\t\t\t\t// used implementation, if library throws unconditionally even on handled errors\n\t\t\t\t// switch to 'then' mode)\n\t\t\t\tpromise.done(onSuccess);\n\t\t\t\tpromise.finally(onFailure);\n\t\t\t} else {\n\t\t\t\t// With no `finally` side effect is that it mutes any eventual\n\t\t\t\t// \"Unhandled error\" events on returned promise\n\t\t\t\tpromise.done(onSuccess, onFailure);\n\t\t\t}\n\t\t} else {\n\t\t\t// With no `done` it's best we can do.\n\t\t\t// Side effect is that it mutes any eventual \"Unhandled error\" events on returned promise\n\t\t\tpromise.then(function (result) {\n\t\t\t\tnextTick(onSuccess.bind(this, result));\n\t\t\t}, function () {\n\t\t\t\tnextTick(onFailure);\n\t\t\t});\n\t\t}\n\t});\n\n\t// From cache (sync)\n\tconf.on('get', function (id, args, context) {\n\t\tvar promise;\n\t\tif (waiting[id]) {\n\t\t\t++waiting[id]; // Still waiting\n\t\t\treturn;\n\t\t}\n\t\tpromise = promises[id];\n\t\tvar emit = function () { conf.emit('getasync', id, args, context); };\n\t\tif (isPromise(promise)) {\n\t\t\tif (typeof promise.done === 'function') promise.done(emit);\n\t\t\telse promise.then(function () { nextTick(emit); });\n\t\t} else {\n\t\t\temit();\n\t\t}\n\t});\n\n\t// On delete\n\tconf.on('delete', function (id) {\n\t\tdelete promises[id];\n\t\tif (waiting[id]) {\n\t\t\tdelete waiting[id];\n\t\t\treturn; // Not yet resolved\n\t\t}\n\t\tif (!hasOwnProperty.call(cache, id)) return;\n\t\tvar result = cache[id];\n\t\tdelete cache[id];\n\t\tconf.emit('deleteasync', id, [result]);\n\t});\n\n\t// On clear\n\tconf.on('clear', function () {\n\t\tvar oldCache = cache;\n\t\tcache = create(null);\n\t\twaiting = create(null);\n\t\tpromises = create(null);\n\t\tconf.emit('clearasync', objectMap(oldCache, function (data) { return [data]; }));\n\t});\n};\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/ext/ref-counter.js":"// Reference counter, useful for garbage collector like functionality\n\n'use strict';\n\nvar d          = require('d')\n  , extensions = require('../lib/registered-extensions')\n\n  , create = Object.create, defineProperties = Object.defineProperties;\n\nextensions.refCounter = function (ignore, conf, options) {\n\tvar cache, postfix;\n\n\tcache = create(null);\n\tpostfix = ((options.async && extensions.async) || (options.promise && extensions.promise))\n\t\t? 'async' : '';\n\n\tconf.on('set' + postfix, function (id, length) { cache[id] = length || 1; });\n\tconf.on('get' + postfix, function (id) { ++cache[id]; });\n\tconf.on('delete' + postfix, function (id) { delete cache[id]; });\n\tconf.on('clear' + postfix, function () { cache = {}; });\n\n\tdefineProperties(conf.memoized, {\n\t\tdeleteRef: d(function () {\n\t\t\tvar id = conf.get(arguments);\n\t\t\tif (id === null) return null;\n\t\t\tif (!cache[id]) return null;\n\t\t\tif (!--cache[id]) {\n\t\t\t\tconf.delete(id);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}),\n\t\tgetRefCount: d(function () {\n\t\t\tvar id = conf.get(arguments);\n\t\t\tif (id === null) return 0;\n\t\t\tif (!cache[id]) return 0;\n\t\t\treturn cache[id];\n\t\t})\n\t});\n};\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/normalizers/get-1.js":"'use strict';\n\nvar indexOf = require('es5-ext/array/#/e-index-of');\n\nmodule.exports = function () {\n\tvar lastId = 0, argsMap = [], cache = [];\n\treturn {\n\t\tget: function (args) {\n\t\t\tvar index = indexOf.call(argsMap, args[0]);\n\t\t\treturn (index === -1) ? null : cache[index];\n\t\t},\n\t\tset: function (args) {\n\t\t\targsMap.push(args[0]);\n\t\t\tcache.push(++lastId);\n\t\t\treturn lastId;\n\t\t},\n\t\tdelete: function (id) {\n\t\t\tvar index = indexOf.call(cache, id);\n\t\t\tif (index !== -1) {\n\t\t\t\targsMap.splice(index, 1);\n\t\t\t\tcache.splice(index, 1);\n\t\t\t}\n\t\t},\n\t\tclear: function () {\n\t\t\targsMap = [];\n\t\t\tcache = [];\n\t\t}\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/normalizers/get-fixed.js":"'use strict';\n\nvar indexOf = require('es5-ext/array/#/e-index-of')\n  , create = Object.create;\n\nmodule.exports = function (length) {\n\tvar lastId = 0, map = [[], []], cache = create(null);\n\treturn {\n\t\tget: function (args) {\n\t\t\tvar index = 0, set = map, i;\n\t\t\twhile (index < (length - 1)) {\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) return null;\n\t\t\t\tset = set[1][i];\n\t\t\t\t++index;\n\t\t\t}\n\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\tif (i === -1) return null;\n\t\t\treturn set[1][i] || null;\n\t\t},\n\t\tset: function (args) {\n\t\t\tvar index = 0, set = map, i;\n\t\t\twhile (index < (length - 1)) {\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) {\n\t\t\t\t\ti = set[0].push(args[index]) - 1;\n\t\t\t\t\tset[1].push([[], []]);\n\t\t\t\t}\n\t\t\t\tset = set[1][i];\n\t\t\t\t++index;\n\t\t\t}\n\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\tif (i === -1) {\n\t\t\t\ti = set[0].push(args[index]) - 1;\n\t\t\t}\n\t\t\tset[1][i] = ++lastId;\n\t\t\tcache[lastId] = args;\n\t\t\treturn lastId;\n\t\t},\n\t\tdelete: function (id) {\n\t\t\tvar index = 0, set = map, i, path = [], args = cache[id];\n\t\t\twhile (index < (length - 1)) {\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tpath.push(set, i);\n\t\t\t\tset = set[1][i];\n\t\t\t\t++index;\n\t\t\t}\n\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\tif (i === -1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tid = set[1][i];\n\t\t\tset[0].splice(i, 1);\n\t\t\tset[1].splice(i, 1);\n\t\t\twhile (!set[0].length && path.length) {\n\t\t\t\ti = path.pop();\n\t\t\t\tset = path.pop();\n\t\t\t\tset[0].splice(i, 1);\n\t\t\t\tset[1].splice(i, 1);\n\t\t\t}\n\t\t\tdelete cache[id];\n\t\t},\n\t\tclear: function () {\n\t\t\tmap = [[], []];\n\t\t\tcache = create(null);\n\t\t}\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/normalizers/get.js":"'use strict';\n\nvar indexOf = require('es5-ext/array/#/e-index-of')\n  , create = Object.create;\n\nmodule.exports = function () {\n\tvar lastId = 0, map = [], cache = create(null);\n\treturn {\n\t\tget: function (args) {\n\t\t\tvar index = 0, set = map, i, length = args.length;\n\t\t\tif (length === 0) return set[length] || null;\n\t\t\tif ((set = set[length])) {\n\t\t\t\twhile (index < (length - 1)) {\n\t\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\t\tif (i === -1) return null;\n\t\t\t\t\tset = set[1][i];\n\t\t\t\t\t++index;\n\t\t\t\t}\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) return null;\n\t\t\t\treturn set[1][i] || null;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function (args) {\n\t\t\tvar index = 0, set = map, i, length = args.length;\n\t\t\tif (length === 0) {\n\t\t\t\tset[length] = ++lastId;\n\t\t\t} else {\n\t\t\t\tif (!set[length]) {\n\t\t\t\t\tset[length] = [[], []];\n\t\t\t\t}\n\t\t\t\tset = set[length];\n\t\t\t\twhile (index < (length - 1)) {\n\t\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\t\tif (i === -1) {\n\t\t\t\t\t\ti = set[0].push(args[index]) - 1;\n\t\t\t\t\t\tset[1].push([[], []]);\n\t\t\t\t\t}\n\t\t\t\t\tset = set[1][i];\n\t\t\t\t\t++index;\n\t\t\t\t}\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) {\n\t\t\t\t\ti = set[0].push(args[index]) - 1;\n\t\t\t\t}\n\t\t\t\tset[1][i] = ++lastId;\n\t\t\t}\n\t\t\tcache[lastId] = args;\n\t\t\treturn lastId;\n\t\t},\n\t\tdelete: function (id) {\n\t\t\tvar index = 0, set = map, i, args = cache[id], length = args.length\n\t\t\t  , path = [];\n\t\t\tif (length === 0) {\n\t\t\t\tdelete set[length];\n\t\t\t} else if ((set = set[length])) {\n\t\t\t\twhile (index < (length - 1)) {\n\t\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\t\tif (i === -1) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tpath.push(set, i);\n\t\t\t\t\tset = set[1][i];\n\t\t\t\t\t++index;\n\t\t\t\t}\n\t\t\t\ti = indexOf.call(set[0], args[index]);\n\t\t\t\tif (i === -1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tid = set[1][i];\n\t\t\t\tset[0].splice(i, 1);\n\t\t\t\tset[1].splice(i, 1);\n\t\t\t\twhile (!set[0].length && path.length) {\n\t\t\t\t\ti = path.pop();\n\t\t\t\t\tset = path.pop();\n\t\t\t\t\tset[0].splice(i, 1);\n\t\t\t\t\tset[1].splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete cache[id];\n\t\t},\n\t\tclear: function () {\n\t\t\tmap = [];\n\t\t\tcache = create(null);\n\t\t}\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/normalizers/get-primitive-fixed.js":"'use strict';\n\nmodule.exports = function (length) {\n\tif (!length) {\n\t\treturn function () { return ''; };\n\t}\n\treturn function (args) {\n\t\tvar id = String(args[0]), i = 0, l = length;\n\t\twhile (--l) { id += '\\u0001' + args[++i]; }\n\t\treturn id;\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-memoizee/node_modules/memoizee/normalizers/primitive.js":"'use strict';\n\nmodule.exports = function (args) {\n\tvar id, i, length = args.length;\n\tif (!length) return '\\u0002';\n\tid = String(args[i = 0]);\n\twhile (--length) id += '\\u0001' + args[++i];\n\treturn id;\n};\n"}